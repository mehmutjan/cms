security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        webservice:
            id: WebserviceUserProvider
        user_db_provider:
            entity:
                class: App\Entity\User
                property: username
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        App\Security\User\WebserviceUser:
            algorithm: bcrypt


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:    ^/
            anonymous: ~
            logout_on_user_change: ~
            # activate different ways to authenticate

#             http_basic: ~
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            guard:
                authenticators:
                    - App\Security\TokenAuthenticator

            methods: [GET, POST]
            form_login:
                provider: user_db_provider
                login_path: /login
                check_path: /login_check
                default_target_path: /
                use_referer: true
                target_path_parameter: _target_path
                csrf_token_generator: security.csrf.token_manager
                csrf_parameter: _csrf_security_token
                csrf_token_id: a_private_string
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /

            logout: ~

            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }
